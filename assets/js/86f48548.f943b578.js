"use strict";(self.webpackChunkleetcode_notes=self.webpackChunkleetcode_notes||[]).push([[1381],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),s=c(t),d=o,f=s["".concat(l,".").concat(d)]||s[d]||m[d]||i;return t?r.createElement(f,u(u({ref:n},p),{},{components:t})):r.createElement(f,u({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,u=new Array(i);u[0]=s;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,u[1]=a;for(var c=2;c<i;c++)u[c]=t[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7878:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return m}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),u=["components"],a={sidebar_position:287},l="287. Find the Duplicate Number",c={unversionedId:"leetcode/medium/Find the Duplicate Number",id:"leetcode/medium/Find the Duplicate Number",title:"287. Find the Duplicate Number",description:"Question",source:"@site/docs/leetcode/medium/287. Find the Duplicate Number.md",sourceDirName:"leetcode/medium",slug:"/leetcode/medium/Find the Duplicate Number",permalink:"/XZ-LeetCode-Journal/docs/leetcode/medium/Find the Duplicate Number",tags:[],version:"current",sidebarPosition:287,frontMatter:{sidebar_position:287},sidebar:"lcSidebar",previous:{title:"230. Kth Smallest Element in a BST",permalink:"/XZ-LeetCode-Journal/docs/leetcode/medium/Kth Smallest Element in a BST"},next:{title:"289. Game of Life",permalink:"/XZ-LeetCode-Journal/docs/leetcode/medium/Game of Life"}},p={},m=[{value:"Question",id:"question",level:2},{value:"Approach",id:"approach",level:2},{value:"Solution",id:"solution",level:2}],s={toc:m};function d(e){var n=e.components,t=(0,o.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"287-find-the-duplicate-number"},"287. Find the Duplicate Number"),(0,i.kt)("h2",{id:"question"},"Question"),(0,i.kt)("p",null,"Given an array of integers ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," containing ",(0,i.kt)("inlineCode",{parentName:"p"},"n + 1")," integers where each integer is in the range ",(0,i.kt)("inlineCode",{parentName:"p"},"[1, n]")," inclusive."),(0,i.kt)("p",null,"There is only one repeated number in ",(0,i.kt)("inlineCode",{parentName:"p"},"nums"),", return this repeated number."),(0,i.kt)("p",null,"You must solve the problem without modifying the array ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," and uses only constant extra space."),(0,i.kt)("p",null,"Example 1:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [1,3,4,2,2]\nOutput: 2\n")),(0,i.kt)("p",null,"Example 2:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Input: nums = [3,1,3,4,2]\nOutput: 3\n")),(0,i.kt)("p",null,"Constraints:\n1 <= n <= 105\nnums.length == n + 1\n1 <= nums","[i]"," <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"approach"},"Approach"),(0,i.kt)("h2",{id:"solution"},"Solution"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"//NOT THE BEST SOLUTION, PURE BRUT FORCE\nclass Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        unordered_map<int,int> m;\n        int out;\n        for(auto n : nums){\n            m[n]++;\n        }\n        for(auto mE: m){\n            if(mE.second > 1) out= mE.first;\n        }\n        return out;\n    }\n};\n")))}d.isMDXComponent=!0}}]);