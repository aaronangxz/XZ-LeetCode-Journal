"use strict";(self.webpackChunkleetcode_notes=self.webpackChunkleetcode_notes||[]).push([[6182],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),f=i,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||a;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7995:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={sidebar_position:74},u="[WIP] 74. Search a 2D Matrix",c={unversionedId:"medium/Search a 2D Matrix",id:"medium/Search a 2D Matrix",title:"[WIP] 74. Search a 2D Matrix",description:"Question",source:"@site/docs/medium/74. Search a 2D Matrix.md",sourceDirName:"medium",slug:"/medium/Search a 2D Matrix",permalink:"/XZ-LeetCode-Journal/docs/medium/Search a 2D Matrix",editUrl:"https://github.com/aaronangxz/XZ-LeetCode-Journal/blob/master/docs/medium/74. Search a 2D Matrix.md",tags:[],version:"current",sidebarPosition:74,frontMatter:{sidebar_position:74},sidebar:"tutorialSidebar",previous:{title:"71. Simplify Path",permalink:"/XZ-LeetCode-Journal/docs/medium/Simplify Path"},next:{title:"230. Kth Smallest Element in a BST",permalink:"/XZ-LeetCode-Journal/docs/medium/Kth Smallest Element in a BST"}},p={},s=[{value:"Question",id:"question",level:2},{value:"Approach",id:"approach",level:2},{value:"Solution",id:"solution",level:2}],m={toc:s};function f(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"wip-74-search-a-2d-matrix"},"[WIP]"," 74. Search a 2D Matrix"),(0,a.kt)("h2",{id:"question"},"Question"),(0,a.kt)("p",null,"Write an efficient algorithm that searches for a value ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," in an ",(0,a.kt)("inlineCode",{parentName:"p"},"m x n")," integer matrix ",(0,a.kt)("inlineCode",{parentName:"p"},"matrix"),". This matrix has the following properties:"),(0,a.kt)("p",null,"Integers in each row are sorted from left to right.\nThe first integer of each row is greater than the last integer of the previous row."),(0,a.kt)("p",null,"Example 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\nOutput: true\n")),(0,a.kt)("p",null,"Example 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\nOutput: false\n")),(0,a.kt)("p",null,"Constraints:\nm == matrix.length\nn == matrix","[i]",".length\n1 <= m, n <= 100\n-104 <= matrix","[i][j]",", target <= 104"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"approach"},"Approach"),(0,a.kt)("h2",{id:"solution"},"Solution"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int row = 0;\n        if(matrix.size() == 1 && matrix[0].size() == 1){\n            if(matrix[0][0] != target) return false;\n            return true;\n        }\n        \n        //find row\n        for(int i = 0; i < matrix.size(); i++){\n            if(target < matrix[i][0]){\n                if(i == 0) row = 0; \n                else row = i - 1;\n                break; \n            }else if(target == matrix[i][0]){\n                row = i;\n                break;\n            }\n            \n            //last row, and target is > than first element\n            if(i == matrix.size() - 1){\n                if(target > matrix[i][0]){\n                    row = i;\n                    break;\n                }\n            }\n        }\n        \n        for(int j = 0; j < matrix[row].size(); j++){\n            if(matrix[row][j] == target) return true;\n        }\n        \n        return false;\n    }\n};\n")))}f.isMDXComponent=!0}}]);