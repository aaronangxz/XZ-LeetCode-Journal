"use strict";(self.webpackChunkleetcode_notes=self.webpackChunkleetcode_notes||[]).push([[3539],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),s=p(t),d=i,f=s["".concat(l,".").concat(d)]||s[d]||m[d]||o;return t?r.createElement(f,u(u({ref:n},c),{},{components:t})):r.createElement(f,u({ref:n},c))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,u=new Array(o);u[0]=s;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,u[1]=a;for(var p=2;p<o;p++)u[p]=t[p];return r.createElement.apply(null,u)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},9186:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return m}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),u=["components"],a={sidebar_position:287},l="287. Find the Duplicate Number",p={unversionedId:"medium/Find the Duplicate Number",id:"medium/Find the Duplicate Number",title:"287. Find the Duplicate Number",description:"Question",source:"@site/docs/medium/287. Find the Duplicate Number.md",sourceDirName:"medium",slug:"/medium/Find the Duplicate Number",permalink:"/XZ-LeetCode-Journal/docs/medium/Find the Duplicate Number",editUrl:"https://github.com/aaronangxz/XZ-LeetCode-Journal/blob/master/docs/medium/287. Find the Duplicate Number.md",tags:[],version:"current",sidebarPosition:287,frontMatter:{sidebar_position:287},sidebar:"tutorialSidebar",previous:{title:"[WIP] 74. Search a 2D Matrix",permalink:"/XZ-LeetCode-Journal/docs/medium/Search a 2D Matrix"},next:{title:"289. Game of Life",permalink:"/XZ-LeetCode-Journal/docs/medium/Game of Life"}},c={},m=[{value:"Question",id:"question",level:2},{value:"Approach",id:"approach",level:2},{value:"Solution",id:"solution",level:2}],s={toc:m};function d(e){var n=e.components,t=(0,i.Z)(e,u);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"287-find-the-duplicate-number"},"287. Find the Duplicate Number"),(0,o.kt)("h2",{id:"question"},"Question"),(0,o.kt)("p",null,"Given an array of integers ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," containing ",(0,o.kt)("inlineCode",{parentName:"p"},"n + 1")," integers where each integer is in the range ",(0,o.kt)("inlineCode",{parentName:"p"},"[1, n]")," inclusive."),(0,o.kt)("p",null,"There is only one repeated number in ",(0,o.kt)("inlineCode",{parentName:"p"},"nums"),", return this repeated number."),(0,o.kt)("p",null,"You must solve the problem without modifying the array ",(0,o.kt)("inlineCode",{parentName:"p"},"nums")," and uses only constant extra space."),(0,o.kt)("p",null,"Example 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [1,3,4,2,2]\nOutput: 2\n")),(0,o.kt)("p",null,"Example 2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: nums = [3,1,3,4,2]\nOutput: 3\n")),(0,o.kt)("p",null,"Constraints:\n1 <= n <= 105\nnums.length == n + 1\n1 <= nums","[i]"," <= n\nAll the integers in nums appear only once except for precisely one integer which appears two or more times."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"approach"},"Approach"),(0,o.kt)("h2",{id:"solution"},"Solution"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"//NOT THE BEST SOLUTION, PURE BRUT FORCE\nclass Solution {\npublic:\n    int findDuplicate(vector<int>& nums) {\n        unordered_map<int,int> m;\n        int out;\n        for(auto n : nums){\n            m[n]++;\n        }\n        for(auto mE: m){\n            if(mE.second > 1) out= mE.first;\n        }\n        return out;\n    }\n};\n")))}d.isMDXComponent=!0}}]);